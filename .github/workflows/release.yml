name: Build and Release Extensions

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build-web-extensions:
    name: Build Chrome and Firefox Extensions
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build Firefox extension
      run: npm run package:firefox
      
    - name: Build Chrome extension
      run: npm run package:chrome
      
    - name: Get package version
      id: package_version
      run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    - name: Clean Firefox ZIP
      run: |
        cd web-ext-artifacts/firefox
        unzip firefox-ynt-*.zip -d temp-firefox
        rm firefox-ynt-*.zip
        cd temp-firefox
        # Keep only necessary files
        mkdir cleaned
        cp -r dist cleaned/
        cp LICENSE cleaned/
        cp manifest.json cleaned/
        cd cleaned
        zip -r ../../firefox-ynt-${{ steps.package_version.outputs.PACKAGE_VERSION }}.zip .
        cd ../..
        rm -rf temp-firefox
        
    - name: Clean Chrome ZIP
      run: |
        cd web-ext-artifacts/chrome
        unzip chrome-ynt-*.zip -d temp-chrome
        rm chrome-ynt-*.zip
        cd temp-chrome
        # Keep only necessary files
        mkdir cleaned
        cp -r dist cleaned/
        cp LICENSE cleaned/
        cp manifest.json cleaned/
        cd cleaned
        zip -r ../../chrome-ynt-${{ steps.package_version.outputs.PACKAGE_VERSION }}.zip .
        cd ../..
        rm -rf temp-chrome

    - name: Upload Firefox extension to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./web-ext-artifacts/firefox/firefox-ynt-${{ steps.package_version.outputs.PACKAGE_VERSION }}.zip
        asset_name: firefox-ynt-${{ steps.package_version.outputs.PACKAGE_VERSION }}.zip
        asset_content_type: application/zip
        
    - name: Upload Chrome extension to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./web-ext-artifacts/chrome/chrome-ynt-${{ steps.package_version.outputs.PACKAGE_VERSION }}.zip
        asset_name: chrome-ynt-${{ steps.package_version.outputs.PACKAGE_VERSION }}.zip
        asset_content_type: application/zip

  build-safari-extension:
    name: Build Safari Extension
    runs-on: macos-15
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build Chrome extension
      run: npm run package:chrome
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.2'
        
    - name: Get package version
      id: package_version
      run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
    
    - name: Clean Chrome ZIP
      run: |
        cd web-ext-artifacts/chrome
        unzip chrome-ynt-*.zip -d temp-chrome
        rm chrome-ynt-*.zip
        cd temp-chrome
        # Keep only necessary files
        mkdir cleaned
        cp -r dist cleaned/
        cp LICENSE cleaned/
        cp manifest.json cleaned/
        cd cleaned
        zip -r ../../chrome-ynt-${{ steps.package_version.outputs.PACKAGE_VERSION }}.zip .
        cd ../..
        rm -rf temp-chrome
        
    - name: Build Safari app
      run: |
        cd "safari-extension/YouTube No Translation"
        xcodebuild -project "YouTube No Translation.xcodeproj" \
          -scheme "YouTube No Translation" \
          -configuration Release \
          -derivedDataPath /tmp/safari-build \
          MACOSX_DEPLOYMENT_TARGET=12.0 \
          ARCHS="x86_64 arm64" \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO
        
        # Copy the built app and create ZIP
        cp -R "/tmp/safari-build/Build/Products/Release/YouTube No Translation.app" "./YouTube No Translation.app"
        zip -r "../../safari-ynt-${{ steps.package_version.outputs.PACKAGE_VERSION }}.zip" "./YouTube No Translation.app"
        
    - name: Upload Safari extension to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./safari-ynt-${{ steps.package_version.outputs.PACKAGE_VERSION }}.zip
        asset_name: safari-ynt-${{ steps.package_version.outputs.PACKAGE_VERSION }}.zip
        asset_content_type: application/zip